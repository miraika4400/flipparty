//=============================================================================
//
// lightクラスの処理 [light.cpp]
// Author : 増澤 未来
//
//=============================================================================
#include "light.h"
#include "manager.h"
#include "renderer.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CLight::CLight()
{
	//メモリの0クリア
	SecureZeroMemory(&m_Light, sizeof(D3DLIGHT9));
}

//=============================================================================
// デストラクタ
//=============================================================================
CLight::~CLight()
{
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CLight::Init(void)
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	// ライトの方向ベクトル
	D3DXVECTOR3 vecDir;

	// ライトをクリアする
	SecureZeroMemory(&m_Light, sizeof(D3DLIGHT9));

	// ライトタイプの指定
	m_Light.Type = D3DLIGHT_DIRECTIONAL;

	// 光の拡散の指定
	m_Light.Diffuse = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

	// ライト方向の指定
	vecDir = LIGHT_DIR;

	// 正規化
	D3DXVec3Normalize(&vecDir, &vecDir);

	m_Light.Direction = vecDir;

	// ライトを設定
	pDevice->SetLight(0, &m_Light);

	// ライトを有効に
	pDevice->LightEnable(0, TRUE);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CLight::Uninit(void)
{
}

//=============================================================================
// 更新処理
//=============================================================================
void CLight::Update(void)
{
}
