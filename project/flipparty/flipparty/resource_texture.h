//=============================================================================
//
// textureヘッダ [texture.h]
// Author : 増澤 未来
//
//=============================================================================

//二重インクルード防止
#ifndef _TEXTURE_H_
#define _TEXTURE_H_

//*****************************
//インクルード
//*****************************
#include "main.h"

//*****************************
//クラス定義
//*****************************

//テクスチャクラス
class CResourceTexture
{
public:
	// 列挙
	// テクスチャ種類
	typedef enum
	{
		TEXTURE_TITLE = 0,       // タイトル
		TEXTURE_TUTORIAL,        // チュートリアル
		TEXTURE_PARTICLE_BOX,    // パーティクル*箱
		TEXTURE_PARTICLE_STAR,   // パーティクル*星
		TEXTURE_PARTICLE_CIRCLE, // パーティクル*円
		TEXTURE_MAX        // テクスチャ数
	}TEXTURE_TYPE;
	
	// メンバ関数
	static CResourceTexture * Create(void);                          // クラス生成
	static void Release(void);                               // クラス破棄
	static LPDIRECT3DTEXTURE9 GetTexture(TEXTURE_TYPE type); // テクスチャの取得処理*引数：取得したいテクスチャ
	
private:
	CResourceTexture();//隠しコンストラクタ
public:
	~CResourceTexture();

private:
	void Load(void); // テクスチャ読み込み
	void Unload(void); // テクスチャ破棄

	// メンバ変数
	static const std::string m_aTexPath[TEXTURE_MAX]; // テクスチャのパス
	static CResourceTexture *m_pSingleTex;                    // テクスチャクラスのポインタ*シングルトン用
	LPDIRECT3DTEXTURE9 m_apTexture[TEXTURE_MAX];      // テクスチャのポインタ
};

#endif