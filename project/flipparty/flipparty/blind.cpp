////////////////////////////////////////////////////
//
//    blindクラスの処理[blind.cpp]
//    Author:増澤 未来
//
////////////////////////////////////////////////////

//******************************
// インクルード
//******************************
#include "blind.h"
#include "manager.h"
#include "renderer.h"

//===================================
// コンストラクタ
//===================================
CBlind::CBlind()
{
}

//===================================
// デストラクタ
//===================================
CBlind::~CBlind()
{
}

//===================================
// クリエイト関数
//===================================
CBlind * CBlind::Create(void)
{
	CBlind *pBlind = NULL;

	pBlind = new CBlind;
	if (pBlind)
	{
		pBlind->Init();
	}

	return pBlind;
}

//===================================
// 初期化処理
//===================================
HRESULT CBlind::Init(void)
{
	CScene3d::Init();
	SetPos(D3DXVECTOR3(0.0f, 0.0f, -10.0f));
	SetSize(D3DXVECTOR3(100.0f, 50.0f, 0.0f));
	SetColor(D3DXCOLOR(0.0f, 0.0f, 0.0f, 1.0f));
	return E_NOTIMPL;
}

//===================================
// 終了処理
//===================================
void CBlind::Uninit(void)
{
	CScene3d::Uninit();
}

//===================================
// 更新処理
//===================================
void CBlind::Update(void)
{
	CScene3d::Update();
}

//===================================
// 描画処理
//===================================
void CBlind::Draw(void)
{
	CScene3d::Draw();
}
